// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shelf/v1/shelfs.proto

package shelfv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A shelf resource.
type Shelf struct {
	// A unique shelf id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// A theme of the shelf (fiction, poetry, etc).
	Theme                string   `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shelf) Reset()         { *m = Shelf{} }
func (m *Shelf) String() string { return proto.CompactTextString(m) }
func (*Shelf) ProtoMessage()    {}
func (*Shelf) Descriptor() ([]byte, []int) {
	return fileDescriptor_423b6d3c43b077d0, []int{0}
}

func (m *Shelf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shelf.Unmarshal(m, b)
}
func (m *Shelf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shelf.Marshal(b, m, deterministic)
}
func (m *Shelf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shelf.Merge(m, src)
}
func (m *Shelf) XXX_Size() int {
	return xxx_messageInfo_Shelf.Size(m)
}
func (m *Shelf) XXX_DiscardUnknown() {
	xxx_messageInfo_Shelf.DiscardUnknown(m)
}

var xxx_messageInfo_Shelf proto.InternalMessageInfo

func (m *Shelf) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Shelf) GetTheme() string {
	if m != nil {
		return m.Theme
	}
	return ""
}

// Response to ListShelves call.
type ListShelvesResponse struct {
	// Shelves in the bookstore.
	Shelves              []*Shelf `protobuf:"bytes,1,rep,name=shelves,proto3" json:"shelves,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListShelvesResponse) Reset()         { *m = ListShelvesResponse{} }
func (m *ListShelvesResponse) String() string { return proto.CompactTextString(m) }
func (*ListShelvesResponse) ProtoMessage()    {}
func (*ListShelvesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_423b6d3c43b077d0, []int{1}
}

func (m *ListShelvesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListShelvesResponse.Unmarshal(m, b)
}
func (m *ListShelvesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListShelvesResponse.Marshal(b, m, deterministic)
}
func (m *ListShelvesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListShelvesResponse.Merge(m, src)
}
func (m *ListShelvesResponse) XXX_Size() int {
	return xxx_messageInfo_ListShelvesResponse.Size(m)
}
func (m *ListShelvesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListShelvesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListShelvesResponse proto.InternalMessageInfo

func (m *ListShelvesResponse) GetShelves() []*Shelf {
	if m != nil {
		return m.Shelves
	}
	return nil
}

// Request message for CreateShelf method.
type CreateShelfRequest struct {
	// The shelf resource to create.
	Shelf                *Shelf   `protobuf:"bytes,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateShelfRequest) Reset()         { *m = CreateShelfRequest{} }
func (m *CreateShelfRequest) String() string { return proto.CompactTextString(m) }
func (*CreateShelfRequest) ProtoMessage()    {}
func (*CreateShelfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_423b6d3c43b077d0, []int{2}
}

func (m *CreateShelfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateShelfRequest.Unmarshal(m, b)
}
func (m *CreateShelfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateShelfRequest.Marshal(b, m, deterministic)
}
func (m *CreateShelfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateShelfRequest.Merge(m, src)
}
func (m *CreateShelfRequest) XXX_Size() int {
	return xxx_messageInfo_CreateShelfRequest.Size(m)
}
func (m *CreateShelfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateShelfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateShelfRequest proto.InternalMessageInfo

func (m *CreateShelfRequest) GetShelf() *Shelf {
	if m != nil {
		return m.Shelf
	}
	return nil
}

// Request message for GetShelf method.
type GetShelfRequest struct {
	// The ID of the shelf resource to retrieve.
	Shelf                int64    `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShelfRequest) Reset()         { *m = GetShelfRequest{} }
func (m *GetShelfRequest) String() string { return proto.CompactTextString(m) }
func (*GetShelfRequest) ProtoMessage()    {}
func (*GetShelfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_423b6d3c43b077d0, []int{3}
}

func (m *GetShelfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShelfRequest.Unmarshal(m, b)
}
func (m *GetShelfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShelfRequest.Marshal(b, m, deterministic)
}
func (m *GetShelfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShelfRequest.Merge(m, src)
}
func (m *GetShelfRequest) XXX_Size() int {
	return xxx_messageInfo_GetShelfRequest.Size(m)
}
func (m *GetShelfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShelfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShelfRequest proto.InternalMessageInfo

func (m *GetShelfRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

// Request message for DeleteShelf method.
type DeleteShelfRequest struct {
	// The ID of the shelf to delete.
	Shelf                int64    `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteShelfRequest) Reset()         { *m = DeleteShelfRequest{} }
func (m *DeleteShelfRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteShelfRequest) ProtoMessage()    {}
func (*DeleteShelfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_423b6d3c43b077d0, []int{4}
}

func (m *DeleteShelfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteShelfRequest.Unmarshal(m, b)
}
func (m *DeleteShelfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteShelfRequest.Marshal(b, m, deterministic)
}
func (m *DeleteShelfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteShelfRequest.Merge(m, src)
}
func (m *DeleteShelfRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteShelfRequest.Size(m)
}
func (m *DeleteShelfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteShelfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteShelfRequest proto.InternalMessageInfo

func (m *DeleteShelfRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

func init() {
	proto.RegisterType((*Shelf)(nil), "shelf.v1.Shelf")
	proto.RegisterType((*ListShelvesResponse)(nil), "shelf.v1.ListShelvesResponse")
	proto.RegisterType((*CreateShelfRequest)(nil), "shelf.v1.CreateShelfRequest")
	proto.RegisterType((*GetShelfRequest)(nil), "shelf.v1.GetShelfRequest")
	proto.RegisterType((*DeleteShelfRequest)(nil), "shelf.v1.DeleteShelfRequest")
}

func init() { proto.RegisterFile("shelf/v1/shelfs.proto", fileDescriptor_423b6d3c43b077d0) }

var fileDescriptor_423b6d3c43b077d0 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0x69, 0x09, 0x0a, 0x53, 0x23, 0x66, 0x44, 0x83, 0x55, 0x23, 0xd9, 0xc4, 0x88, 0x26,
	0x6e, 0x03, 0x5e, 0x4c, 0x48, 0x0c, 0x41, 0xd1, 0x8b, 0x07, 0x52, 0x6e, 0xde, 0xf8, 0x33, 0x40,
	0x03, 0xb8, 0xb5, 0xbb, 0x34, 0xd1, 0x2f, 0xe2, 0xd7, 0x35, 0xdd, 0xa6, 0x52, 0xa1, 0xde, 0x76,
	0x67, 0xde, 0x9b, 0xd9, 0xf7, 0xcb, 0xc2, 0x91, 0x9c, 0xd1, 0x62, 0xe2, 0x84, 0x0d, 0x47, 0x1f,
	0x24, 0xf7, 0x03, 0xa1, 0x04, 0x16, 0xf5, 0x8d, 0x87, 0x0d, 0xfb, 0x74, 0x2a, 0xc4, 0x74, 0x41,
	0x8e, 0xae, 0x0f, 0x57, 0x13, 0x87, 0x96, 0xbe, 0xfa, 0x8c, 0x65, 0xec, 0x16, 0x0a, 0xfd, 0x48,
	0x88, 0xfb, 0x60, 0x7a, 0xe3, 0xaa, 0x51, 0x33, 0xea, 0x79, 0xd7, 0xf4, 0xc6, 0x58, 0x81, 0x82,
	0x9a, 0xd1, 0x92, 0xaa, 0x66, 0xcd, 0xa8, 0x97, 0xdc, 0xf8, 0xc2, 0xda, 0x70, 0xf8, 0xea, 0x49,
	0x15, 0x59, 0x42, 0x92, 0x2e, 0x49, 0x5f, 0xbc, 0x4b, 0xc2, 0x6b, 0xd8, 0x95, 0x71, 0xa9, 0x6a,
	0xd4, 0xf2, 0x75, 0xab, 0x59, 0xe6, 0xc9, 0x7a, 0xae, 0xc7, 0xbb, 0x49, 0x9f, 0xb5, 0x00, 0x1f,
	0x03, 0x1a, 0x28, 0x8a, 0xeb, 0xf4, 0xb1, 0x22, 0xa9, 0xf0, 0x12, 0x0a, 0xda, 0xa0, 0x1f, 0x90,
	0x61, 0x8f, 0xbb, 0xec, 0x0a, 0xca, 0x2f, 0xa4, 0xfe, 0x38, 0x2b, 0x69, 0x67, 0x3e, 0x11, 0xde,
	0x00, 0x3e, 0xd1, 0x82, 0x36, 0xb6, 0x64, 0x6a, 0x9b, 0xdf, 0x26, 0xec, 0x69, 0x59, 0x9f, 0x82,
	0xd0, 0x1b, 0x11, 0x3e, 0x83, 0x95, 0x0a, 0x89, 0xc7, 0x3c, 0x06, 0xc8, 0x13, 0x80, 0xbc, 0x1b,
	0x01, 0xb4, 0xcf, 0xd7, 0x8f, 0xcc, 0x60, 0xc2, 0x72, 0xf8, 0x00, 0x56, 0x2a, 0x2a, 0x9e, 0xad,
	0xf5, 0xdb, 0x04, 0xec, 0xcd, 0xc8, 0x2c, 0x87, 0xf7, 0x50, 0x4c, 0xd2, 0xe2, 0xc9, 0xba, 0xbd,
	0x41, 0x20, 0xcb, 0xd9, 0x05, 0x2b, 0x15, 0x3f, 0xbd, 0x79, 0x9b, 0x8a, 0xfd, 0x4f, 0x3e, 0x96,
	0xeb, 0xb4, 0xe1, 0x62, 0x24, 0x96, 0x7c, 0xe0, 0x4b, 0x29, 0x56, 0x5f, 0x03, 0x3e, 0x14, 0x62,
	0x2e, 0x95, 0x08, 0xe8, 0x77, 0x5e, 0xa7, 0xd4, 0x11, 0x62, 0xde, 0x8b, 0x8c, 0x3d, 0xe3, 0xed,
	0x20, 0xf9, 0x8a, 0x2d, 0x7d, 0x08, 0x1b, 0xc3, 0x1d, 0x3d, 0xf3, 0xee, 0x27, 0x00, 0x00, 0xff,
	0xff, 0xd1, 0x91, 0x18, 0x51, 0xa5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShelfServiceClient is the client API for ShelfService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShelfServiceClient interface {
	// Returns a list of all shelves in the bookstore.
	ListShelves(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListShelvesResponse, error)
	// Creates a new shelf in the bookstore.
	CreateShelf(ctx context.Context, in *CreateShelfRequest, opts ...grpc.CallOption) (*Shelf, error)
	// Returns a specific bookstore shelf.
	GetShelf(ctx context.Context, in *GetShelfRequest, opts ...grpc.CallOption) (*Shelf, error)
	// Deletes a shelf, including all books that are stored on the shelf.
	DeleteShelf(ctx context.Context, in *DeleteShelfRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type shelfServiceClient struct {
	cc *grpc.ClientConn
}

func NewShelfServiceClient(cc *grpc.ClientConn) ShelfServiceClient {
	return &shelfServiceClient{cc}
}

func (c *shelfServiceClient) ListShelves(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListShelvesResponse, error) {
	out := new(ListShelvesResponse)
	err := c.cc.Invoke(ctx, "/shelf.v1.ShelfService/ListShelves", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shelfServiceClient) CreateShelf(ctx context.Context, in *CreateShelfRequest, opts ...grpc.CallOption) (*Shelf, error) {
	out := new(Shelf)
	err := c.cc.Invoke(ctx, "/shelf.v1.ShelfService/CreateShelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shelfServiceClient) GetShelf(ctx context.Context, in *GetShelfRequest, opts ...grpc.CallOption) (*Shelf, error) {
	out := new(Shelf)
	err := c.cc.Invoke(ctx, "/shelf.v1.ShelfService/GetShelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shelfServiceClient) DeleteShelf(ctx context.Context, in *DeleteShelfRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/shelf.v1.ShelfService/DeleteShelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShelfServiceServer is the server API for ShelfService service.
type ShelfServiceServer interface {
	// Returns a list of all shelves in the bookstore.
	ListShelves(context.Context, *empty.Empty) (*ListShelvesResponse, error)
	// Creates a new shelf in the bookstore.
	CreateShelf(context.Context, *CreateShelfRequest) (*Shelf, error)
	// Returns a specific bookstore shelf.
	GetShelf(context.Context, *GetShelfRequest) (*Shelf, error)
	// Deletes a shelf, including all books that are stored on the shelf.
	DeleteShelf(context.Context, *DeleteShelfRequest) (*empty.Empty, error)
}

// UnimplementedShelfServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShelfServiceServer struct {
}

func (*UnimplementedShelfServiceServer) ListShelves(ctx context.Context, req *empty.Empty) (*ListShelvesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListShelves not implemented")
}
func (*UnimplementedShelfServiceServer) CreateShelf(ctx context.Context, req *CreateShelfRequest) (*Shelf, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShelf not implemented")
}
func (*UnimplementedShelfServiceServer) GetShelf(ctx context.Context, req *GetShelfRequest) (*Shelf, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShelf not implemented")
}
func (*UnimplementedShelfServiceServer) DeleteShelf(ctx context.Context, req *DeleteShelfRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteShelf not implemented")
}

func RegisterShelfServiceServer(s *grpc.Server, srv ShelfServiceServer) {
	s.RegisterService(&_ShelfService_serviceDesc, srv)
}

func _ShelfService_ListShelves_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShelfServiceServer).ListShelves(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shelf.v1.ShelfService/ListShelves",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShelfServiceServer).ListShelves(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShelfService_CreateShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShelfServiceServer).CreateShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shelf.v1.ShelfService/CreateShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShelfServiceServer).CreateShelf(ctx, req.(*CreateShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShelfService_GetShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShelfServiceServer).GetShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shelf.v1.ShelfService/GetShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShelfServiceServer).GetShelf(ctx, req.(*GetShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShelfService_DeleteShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShelfServiceServer).DeleteShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shelf.v1.ShelfService/DeleteShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShelfServiceServer).DeleteShelf(ctx, req.(*DeleteShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShelfService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shelf.v1.ShelfService",
	HandlerType: (*ShelfServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListShelves",
			Handler:    _ShelfService_ListShelves_Handler,
		},
		{
			MethodName: "CreateShelf",
			Handler:    _ShelfService_CreateShelf_Handler,
		},
		{
			MethodName: "GetShelf",
			Handler:    _ShelfService_GetShelf_Handler,
		},
		{
			MethodName: "DeleteShelf",
			Handler:    _ShelfService_DeleteShelf_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shelf/v1/shelfs.proto",
}
